#part 2
#question 1
#Brooke
SELECT product_code, product_name, list_price, discount_percent
FROM products
order by list_price DESC;

#question 2
#Anne

#question 3
#Brooke
select product_name, list_price, date_added
from products
having list_price between 500 and 2000
order by date_added desc;

#question 4
#Brooke
select product_name, list_price,
	ROUND(list_price * (discount_percent/100),2) as discount_amount,
	ROUND(list_price - list_price * (discount_percent/100),2) as discount_price
from products
order by discount_price desc
limit 5;

#question 5
#Anne

#question 6
#Brooke
select order_id, order_date, ship_date
from orders
where ship_date = NULL;

#question 7
#Anne

#question 8
#Anne

#part 3
#question 1
#Brooke
select c.category_name, p.product_name, p.list_price
from categories c, products p
order by c.category_name, p.product_name;

#question 2
#Pramosh

#question 3
#Anne

#question 4
#Brooke
select c.last_name, c.first_name, o.order_date, p.product_name, oi.item_price, oi.discount_amount, oi.quantity
from Customers c, Orders o, Products p, Order_items oi
order by c.last_name, o.order_date, p.product_name;

#question 5
#Brooke
select a.product_name, a.product_id, a.list_price
from Products a, products b
where a.product_id != b.product_id
and a.list_price = b.list_price
order by a.product_name;

#question 6
#Anne

#question 7
#Anne

#part 4
#question 1
#Pramosh

#question 2
#Pramosh

#question 3
#Anne

#question 4
#Anne

#question 5
#Anne

#question 6
#Anne

#question 7
#Pramosh

#question 8
#Brooke
update Customers
set password = 'secret'
where email_address = 'rick@raven.com';

#question 9
#Brooke
update Customers
set password = 'reset'
limit 100;

#part 5
#question 1
#Pramosh

#question 2
#Keven

#question 3
#Pramosh

#question 4
#Keven

#question 5
#Keven

#question 6
#Pramosh

#question 7
#Keven

#question 8
#Keven

#question 9
#Pramosh

#question 10
#Keven

#question 11
#Pramosh

#part 6
#question 1 
#Keven
SELECT  category_name
FROM categories c
WHERE category_id IN
(SELECT category_id FROM products p)
ORDER BY category_name;

#question 2
#Keven
SELECT product_name, list_price
FROM products
WHERE list_price>
(SELECT AVG(list_price)
FROM products
WHERE list_price > 0)
ORDER BY list_price DESC

#question 3
#Keven
SELECT category_name
FROM categories
WHERE NOT EXISTS 
(SELECT * FROM products WHERE categories.category_id =
products.category_id)

#question 4
#Keven
SELECT l.email_address, MAX(l.order_total) AS largest_order
FROM (SELECT c.email_address, o.order_id, ((oi.item_price-oi.discount_amount)*oi.quantity) AS order_total
FROM customers c JOIN orders o
ON c.customer_id =o.customer_id
JOIN order_items oi
ON o.order_id = oi.order_id
GROUP BY c.email_address, o.order_id) AS l 
GROUP BY l.email_address //get error when trying to group by largest_order

#question 5 
#Keven
SELECT a.product_name, a.discount_percent
FROM products AS a
WHERE a.discount_percent NOT IN
(SELECT b.discount_percent FROM products AS b
WHERE a.product_name <> b.product_name)
ORDER BY product_name

#question 6 
#Keven
SELECT email_address, order_id, order_date
FROM customers AS a NATURAL JOIN orders
WHERE order_date = 
  (SELECT min(order_date)
  FROM orders as b
  where a.customer_id = b.customer_id)
ORDER BY order_date AND order_id
