#part 2
#question 1

#question 2

#question 3

#question 4

#question 5

#question 6

#question 7

#question 8

#part 3
#question 1

#question 2

#question 3

#question 4

#question 5

#question 6

#question 7

#part 4
#question 1

#question 2

#question 3

#question 4

#question 5

#question 6

#question 7

#question 8

#question 9

#part 5
#question 1

#question 2

#question 3

#question 4

#question 5

#question 6

#question 7

#question 8

#question 9

#question 10

#question 11

#part 6
#question 1 
SELECT  category_name
FROM categories c
WHERE category_id IN
(SELECT category_id FROM products p)
ORDER BY category_name;

#question 2 
SELECT product_name, list_price
FROM products
WHERE list_price>
(SELECT AVG(list_price)
FROM products
WHERE list_price > 0)
ORDER BY list_price DESC

#question 3 
SELECT category_name
FROM categories
WHERE NOT EXISTS 
(SELECT * FROM products WHERE categories.category_id =
products.category_id)

#question 4 
SELECT l.email_address, MAX(l.order_total) AS largest_order
FROM (SELECT c.email_address, o.order_id, ((oi.item_price-oi.discount_amount)*oi.quantity) AS order_total
FROM customers c JOIN orders o
ON c.customer_id =o.customer_id
JOIN order_items oi
ON o.order_id = oi.order_id
GROUP BY c.email_address, o.order_id) AS l 
GROUP BY l.email_address //get error when trying to group by largest_order

#question 5 
SELECT a.product_name, a.discount_percent
FROM products AS a
WHERE a.discount_percent NOT IN
(SELECT b.discount_percent FROM products AS b
WHERE a.product_name <> b.product_name)
ORDER BY product_name

#question 6 
SELECT email_address, order_id, order_date
FROM customers AS a NATURAL JOIN orders
WHERE order_date = 
  (SELECT min(order_date)
  FROM orders as b
  where a.customer_id = b.customer_id)
ORDER BY order_date AND order_id
